[
  {
    "name": "hs._asm.typee",
    "desc": "In progress",
    "doc": "In progress",
    "items": [
      {
        "type": "Constructor",
        "name": "new",
        "def": "hs._asm.typee.new() -> typeeObject",
        "doc": "Creates a new typee object.\n\nParameters:\n * None\n\nReturns:\n * returns typee object"
      },
      {
        "type": "Method",
        "name": "delete",
        "def": "hs._asm.typee:delete() -> nil",
        "doc": "Deletes the typee object.\n\nParameters:\n * None\n\nReturns:\n * None"
      }
    ]
  },
  {
    "name": "utils.requirePlus",
    "desc": "Some useful additions to requiring stuff",
    "doc": "Some useful additions to requiring stuff",
    "items": [
      {
        "type": "Function",
        "name": "requirePath",
        "def": "utils.requirePlus.requirePath(path[, output]) -> table-of-modules",
        "doc": "Parses `package.path` and `package.cpath` by appending `path` to it and seeing what modules or files may exist at each location for loading, then requires them.  If `output` is true, then a log message is printed to the hammerspoon console for each file loaded. This function returns a table whose individual keys contain the loaded modules.\n\nThis only checks at the level of `path` for a match to ?.lua or ?/init.lua (or ?.so).  It does not recurse further subdirectories.  Load order is unspecified, so each module must (they really should anyways) make sure to require anything necessary for their successful loading internally, and not assume a specific load order."
      },
      {
        "type": "Function",
        "name": "updatePaths",
        "def": "utils.requirePlus.updatePaths(label, command|table[, append])",
        "doc": "Updates package.path and package.cpath with the output of command or the contents of table.  Label is used to identify the source of the added paths in the output to the hammerspoon console.  If `append` is true, then the new paths are attached to the end of `path` and `cpath`, otherwise they are attached to the beginning.  Duplicates are pruned from the added paths.\n\nIf the additional paths are provided by a table, then the first entry should contain paths to add to package.path and the second entry to package.cpath.  If the additional paths are from a command, then they are assumed to be from a command similar to `luarocks path`, which prints lines suitable for including in a shell configuration script, and that the first line is for package.path, and the second is for package.cpath.\n\n    $ luarocks path\n    export LUA_PATH='/usr/local/share/lua/5.2/?.lua;...'\n    export LUA_CPATH='/usr/local/lib/lua/5.2/?.so;...'"
      }
    ]
  }
]
